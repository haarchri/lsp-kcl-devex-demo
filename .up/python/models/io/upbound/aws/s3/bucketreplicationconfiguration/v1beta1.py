# generated by datamodel-codegen:
#   filename:  workdir/s3_aws_upbound_io_v1beta1_bucketreplicationconfiguration.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class BucketRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class BucketSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class RoleRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class RoleSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class DeleteMarkerReplicationItem(BaseModel):
    status: Optional[str] = None
    """
    Whether delete markers should be replicated. Either "Enabled" or "Disabled".
    """


class AccessControlTranslationItem(BaseModel):
    owner: Optional[str] = None
    """
    Specifies the replica ownership. For default and valid values, see PUT bucket replication in the Amazon S3 API Reference. Valid values: Destination.
    """


class ReplicaKmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ReplicaKmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class EncryptionConfigurationItem(BaseModel):
    replicaKmsKeyId: Optional[str] = None
    """
    ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
    """
    replicaKmsKeyIdRef: Optional[ReplicaKmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate replicaKmsKeyId.
    """
    replicaKmsKeyIdSelector: Optional[ReplicaKmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate replicaKmsKeyId.
    """


class EventThresholdItem(BaseModel):
    minutes: Optional[float] = None
    """
    Time in minutes. Valid values: 15.
    """


class Metric(BaseModel):
    eventThreshold: Optional[List[EventThresholdItem]] = None
    """
    Configuration block that specifies the time threshold for emitting the s3:Replication:OperationMissedThreshold event. See below.
    """
    status: Optional[str] = None
    """
    Whether the existing objects should be replicated. Either "Enabled" or "Disabled".
    """


class TimeItem(BaseModel):
    minutes: Optional[float] = None
    """
    Time in minutes. Valid values: 15.
    """


class ReplicationTimeItem(BaseModel):
    status: Optional[str] = None
    """
    Whether the existing objects should be replicated. Either "Enabled" or "Disabled".
    """
    time: Optional[List[TimeItem]] = None
    """
    Configuration block specifying the time by which replication should be complete for all objects and operations on objects. See below.
    """


class DestinationItem(BaseModel):
    accessControlTranslation: Optional[List[AccessControlTranslationItem]] = None
    """
    Configuration block that specifies the overrides to use for object owners on replication. See below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with account owner override configuration.
    """
    account: Optional[str] = None
    """
    Account ID to specify the replica ownership. Must be used in conjunction with access_control_translation override configuration.
    """
    bucket: Optional[str] = None
    """
    ARN of the bucket where you want Amazon S3 to store the results.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in s3 to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in s3 to populate bucket.
    """
    encryptionConfiguration: Optional[List[EncryptionConfigurationItem]] = None
    """
    Configuration block that provides information about encryption. See below. If source_selection_criteria is specified, you must specify this element.
    """
    metrics: Optional[List[Metric]] = None
    """
    Configuration block that specifies replication metrics-related settings enabling replication metrics and events. See below.
    """
    replicationTime: Optional[List[ReplicationTimeItem]] = None
    """
    Configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. See below. Replication Time Control must be used in conjunction with metrics.
    """
    storageClass: Optional[str] = None
    """
    The storage class used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
    """


class ExistingObjectReplicationItem(BaseModel):
    status: Optional[str] = None
    """
    Whether the existing objects should be replicated. Either "Enabled" or "Disabled".
    """


class AndItem(BaseModel):
    prefix: Optional[str] = None
    """
    Object key name prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length. Defaults to an empty string ("") if filter is not specified.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Map of tags (key and value pairs) that identifies a subset of objects to which the rule applies. The rule applies only to objects having all the tags in its tagset.
    """


class TagItem(BaseModel):
    key: Optional[str] = None
    """
    Name of the object key.
    """
    value: Optional[str] = None
    """
    Value of the tag.
    """


class FilterItem(BaseModel):
    and_: Optional[List[AndItem]] = Field(None, alias='and')
    """
    Configuration block for specifying rule filters. This element is required only if you specify more than one filter. See and below for more details.
    """
    prefix: Optional[str] = None
    """
    Object key name prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length. Defaults to an empty string ("") if filter is not specified.
    """
    tag: Optional[List[TagItem]] = None
    """
    Configuration block for specifying a tag key and value. See below.
    """


class ReplicaModification(BaseModel):
    status: Optional[str] = None
    """
    Whether the existing objects should be replicated. Either "Enabled" or "Disabled".
    """


class SseKmsEncryptedObject(BaseModel):
    status: Optional[str] = None
    """
    Whether the existing objects should be replicated. Either "Enabled" or "Disabled".
    """


class SourceSelectionCriterion(BaseModel):
    replicaModifications: Optional[List[ReplicaModification]] = None
    """
    Configuration block that you can specify for selections for modifications on replicas. Amazon S3 doesn't replicate replica modifications by default. In the latest version of replication configuration (when filter is specified), you can specify this element and set the status to Enabled to replicate modifications on replicas.
    """
    sseKmsEncryptedObjects: Optional[List[SseKmsEncryptedObject]] = None
    """
    Configuration block for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If specified, replica_kms_key_id in destination encryption_configuration must be specified as well.
    """


class RuleItem(BaseModel):
    deleteMarkerReplication: Optional[List[DeleteMarkerReplicationItem]] = None
    """
    Whether delete markers are replicated. This argument is only valid with V2 replication configurations (i.e., when filter is used)documented below.
    """
    destination: Optional[List[DestinationItem]] = None
    """
    Specifies the destination for the rule. See below.
    """
    existingObjectReplication: Optional[List[ExistingObjectReplicationItem]] = None
    """
    Replicate existing objects in the source bucket according to the rule configurations. See below.
    """
    filter: Optional[List[FilterItem]] = None
    """
    Filter that identifies subset of objects to which the replication rule applies. See below. If not specified, the rule will default to using prefix.
    """
    id: Optional[str] = None
    """
    Unique identifier for the rule. Must be less than or equal to 255 characters in length.
    """
    prefix: Optional[str] = None
    """
    Object key name prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length. Defaults to an empty string ("") if filter is not specified.
    """
    priority: Optional[float] = None
    """
    Priority associated with the rule. Priority should only be set if filter is configured. If not provided, defaults to 0. Priority must be unique between multiple rules.
    """
    sourceSelectionCriteria: Optional[List[SourceSelectionCriterion]] = None
    """
    Specifies special object selection criteria. See below.
    """
    status: Optional[str] = None
    """
    Status of the rule. Either "Enabled" or "Disabled". The rule is ignored if status is not "Enabled".
    """


class TokenSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class ForProvider(BaseModel):
    bucket: Optional[str] = None
    """
    Name of the source S3 bucket you want Amazon S3 to monitor.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in s3 to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in s3 to populate bucket.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    role: Optional[str] = None
    """
    ARN of the IAM role for Amazon S3 to assume when replicating the objects.
    """
    roleRef: Optional[RoleRef] = None
    """
    Reference to a Role in iam to populate role.
    """
    roleSelector: Optional[RoleSelector] = None
    """
    Selector for a Role in iam to populate role.
    """
    rule: Optional[List[RuleItem]] = None
    """
    List of configuration blocks describing the rules managing the replication. See below.
    """
    tokenSecretRef: Optional[TokenSecretRef] = None
    """
    Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
    For more details, see Using S3 Object Lock with replication.
    """


class InitProvider(BaseModel):
    bucket: Optional[str] = None
    """
    Name of the source S3 bucket you want Amazon S3 to monitor.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in s3 to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in s3 to populate bucket.
    """
    role: Optional[str] = None
    """
    ARN of the IAM role for Amazon S3 to assume when replicating the objects.
    """
    roleRef: Optional[RoleRef] = None
    """
    Reference to a Role in iam to populate role.
    """
    roleSelector: Optional[RoleSelector] = None
    """
    Selector for a Role in iam to populate role.
    """
    rule: Optional[List[RuleItem]] = None
    """
    List of configuration blocks describing the rules managing the replication. See below.
    """
    tokenSecretRef: Optional[TokenSecretRef] = None
    """
    Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
    For more details, see Using S3 Object Lock with replication.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class EncryptionConfigurationItemModel(BaseModel):
    replicaKmsKeyId: Optional[str] = None
    """
    ID (Key ARN or Alias ARN) of the customer managed AWS KMS key stored in AWS Key Management Service (KMS) for the destination bucket.
    """


class DestinationItemModel(BaseModel):
    accessControlTranslation: Optional[List[AccessControlTranslationItem]] = None
    """
    Configuration block that specifies the overrides to use for object owners on replication. See below. Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object. Must be used in conjunction with account owner override configuration.
    """
    account: Optional[str] = None
    """
    Account ID to specify the replica ownership. Must be used in conjunction with access_control_translation override configuration.
    """
    bucket: Optional[str] = None
    """
    ARN of the bucket where you want Amazon S3 to store the results.
    """
    encryptionConfiguration: Optional[List[EncryptionConfigurationItemModel]] = None
    """
    Configuration block that provides information about encryption. See below. If source_selection_criteria is specified, you must specify this element.
    """
    metrics: Optional[List[Metric]] = None
    """
    Configuration block that specifies replication metrics-related settings enabling replication metrics and events. See below.
    """
    replicationTime: Optional[List[ReplicationTimeItem]] = None
    """
    Configuration block that specifies S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. See below. Replication Time Control must be used in conjunction with metrics.
    """
    storageClass: Optional[str] = None
    """
    The storage class used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
    """


class AtProvider(BaseModel):
    bucket: Optional[str] = None
    """
    Name of the source S3 bucket you want Amazon S3 to monitor.
    """
    id: Optional[str] = None
    """
    S3 source bucket name.
    """
    role: Optional[str] = None
    """
    ARN of the IAM role for Amazon S3 to assume when replicating the objects.
    """
    rule: Optional[List[RuleItem]] = None
    """
    List of configuration blocks describing the rules managing the replication. See below.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class BucketReplicationConfiguration(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    BucketReplicationConfigurationSpec defines the desired state of BucketReplicationConfiguration
    """
    status: Optional[Status] = None
    """
    BucketReplicationConfigurationStatus defines the observed state of BucketReplicationConfiguration.
    """


class BucketReplicationConfigurationList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[BucketReplicationConfiguration]
    """
    List of bucketreplicationconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """