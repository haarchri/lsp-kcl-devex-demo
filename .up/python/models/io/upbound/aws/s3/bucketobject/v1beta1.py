# generated by datamodel-codegen:
#   filename:  workdir/s3_aws_upbound_io_v1beta1_bucketobject.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class BucketRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class BucketSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class KmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class KmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    acl: Optional[str] = None
    """
    Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private.
    """
    bucket: Optional[str] = None
    """
    Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    """
    bucketKeyEnabled: Optional[bool] = None
    """
    Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in s3 to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in s3 to populate bucket.
    """
    cacheControl: Optional[str] = None
    """
    Caching behavior along the request/reply chain Read w3c cache_control for further details.
    """
    content: Optional[str] = None
    """
    Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    """
    contentBase64: Optional[str] = None
    """
    Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    """
    contentDisposition: Optional[str] = None
    """
    Presentational information for the object. Read w3c content_disposition for further information.
    """
    contentEncoding: Optional[str] = None
    """
    Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    """
    contentLanguage: Optional[str] = None
    """
    Language the content is in e.g., en-US or en-GB.
    """
    contentType: Optional[str] = None
    """
    Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    """
    etag: Optional[str] = None
    """
    Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms" (see source_hash instead).
    """
    forceDestroy: Optional[bool] = None
    """
    Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    """
    key: Optional[str] = None
    """
    Name of the object once it is in the bucket.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    """
    objectLockLegalHoldStatus: Optional[str] = None
    """
    Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    """
    objectLockMode: Optional[str] = None
    """
    Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    """
    objectLockRetainUntilDate: Optional[str] = None
    """
    Date and time, in RFC3339 format, when this object's object lock will expire.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    serverSideEncryption: Optional[str] = None
    """
    Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    """
    source: Optional[str] = None
    """
    Path to a file that will be read and uploaded as raw bytes for the object content.
    """
    sourceHash: Optional[str] = None
    """
    Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    """
    storageClass: Optional[str] = None
    """
    Storage Class for the object. Defaults to "STANDARD".
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    websiteRedirect: Optional[str] = None
    """
    Target URL for website redirect.
    """


class InitProvider(BaseModel):
    acl: Optional[str] = None
    """
    Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private.
    """
    bucket: Optional[str] = None
    """
    Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    """
    bucketKeyEnabled: Optional[bool] = None
    """
    Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    """
    bucketRef: Optional[BucketRef] = None
    """
    Reference to a Bucket in s3 to populate bucket.
    """
    bucketSelector: Optional[BucketSelector] = None
    """
    Selector for a Bucket in s3 to populate bucket.
    """
    cacheControl: Optional[str] = None
    """
    Caching behavior along the request/reply chain Read w3c cache_control for further details.
    """
    content: Optional[str] = None
    """
    Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    """
    contentBase64: Optional[str] = None
    """
    Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    """
    contentDisposition: Optional[str] = None
    """
    Presentational information for the object. Read w3c content_disposition for further information.
    """
    contentEncoding: Optional[str] = None
    """
    Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    """
    contentLanguage: Optional[str] = None
    """
    Language the content is in e.g., en-US or en-GB.
    """
    contentType: Optional[str] = None
    """
    Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    """
    etag: Optional[str] = None
    """
    Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms" (see source_hash instead).
    """
    forceDestroy: Optional[bool] = None
    """
    Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    """
    key: Optional[str] = None
    """
    Name of the object once it is in the bucket.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    """
    objectLockLegalHoldStatus: Optional[str] = None
    """
    Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    """
    objectLockMode: Optional[str] = None
    """
    Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    """
    objectLockRetainUntilDate: Optional[str] = None
    """
    Date and time, in RFC3339 format, when this object's object lock will expire.
    """
    serverSideEncryption: Optional[str] = None
    """
    Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    """
    source: Optional[str] = None
    """
    Path to a file that will be read and uploaded as raw bytes for the object content.
    """
    sourceHash: Optional[str] = None
    """
    Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    """
    storageClass: Optional[str] = None
    """
    Storage Class for the object. Defaults to "STANDARD".
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    websiteRedirect: Optional[str] = None
    """
    Target URL for website redirect.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AtProvider(BaseModel):
    acl: Optional[str] = None
    """
    Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private.
    """
    arn: Optional[str] = None
    """
    ARN of the object.
    """
    bucket: Optional[str] = None
    """
    Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    """
    bucketKeyEnabled: Optional[bool] = None
    """
    Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    """
    cacheControl: Optional[str] = None
    """
    Caching behavior along the request/reply chain Read w3c cache_control for further details.
    """
    content: Optional[str] = None
    """
    Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    """
    contentBase64: Optional[str] = None
    """
    Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    """
    contentDisposition: Optional[str] = None
    """
    Presentational information for the object. Read w3c content_disposition for further information.
    """
    contentEncoding: Optional[str] = None
    """
    Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    """
    contentLanguage: Optional[str] = None
    """
    Language the content is in e.g., en-US or en-GB.
    """
    contentType: Optional[str] = None
    """
    Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    """
    etag: Optional[str] = None
    """
    Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms" (see source_hash instead).
    """
    forceDestroy: Optional[bool] = None
    """
    Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    """
    id: Optional[str] = None
    key: Optional[str] = None
    """
    Name of the object once it is in the bucket.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    """
    metadata: Optional[Dict[str, str]] = None
    """
    Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    """
    objectLockLegalHoldStatus: Optional[str] = None
    """
    Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    """
    objectLockMode: Optional[str] = None
    """
    Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    """
    objectLockRetainUntilDate: Optional[str] = None
    """
    Date and time, in RFC3339 format, when this object's object lock will expire.
    """
    serverSideEncryption: Optional[str] = None
    """
    Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    """
    source: Optional[str] = None
    """
    Path to a file that will be read and uploaded as raw bytes for the object content.
    """
    sourceHash: Optional[str] = None
    """
    Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    """
    storageClass: Optional[str] = None
    """
    Storage Class for the object. Defaults to "STANDARD".
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    versionId: Optional[str] = None
    """
    Unique version ID value for the object, if bucket versioning is enabled.
    """
    websiteRedirect: Optional[str] = None
    """
    Target URL for website redirect.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class BucketObject(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    BucketObjectSpec defines the desired state of BucketObject
    """
    status: Optional[Status] = None
    """
    BucketObjectStatus defines the observed state of BucketObject.
    """


class BucketObjectList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[BucketObject]
    """
    List of bucketobjects. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """